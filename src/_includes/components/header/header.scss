@use 'node_modules/utopia-core-scss/src/utopia' as utopia;

$settings: (
  "minWidth": 375,
  "maxWidth": 1000,
  "usePx": true,
  "relativeTo": "viewport-width",
);

@function cc($min, $max) {
  @return utopia.calculateClamp(map-merge($settings, (
    "minSize": $min,
    "maxSize": $max,
  )));
}

.c-header {
  --min-height: 320px;

  padding-block: 7.5rem 2.5rem;
  text-align: center;
  min-height: var(--min-height);
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-direction: column;
  position: relative;

  &__content {
    margin-block: auto;
  }
  
  @media (min-width: 43em) {
    --min-height: 340px;

    justify-content: flex-start;
    padding-block-start: 0;
  }

  .c-logo {
    max-width: #{cc(240, 280)};
  }

  &--with-hands {
    --links-size: var(--step-1);
    --content-offset: #{cc(-85, 10)};
    --min-height: #{cc(480, 850)};

    min-height: var(--min-height);
    margin-top: 6rem;

    .c-logo {
      animation: 1.5s fadeIn 0.8s forwards ease-in-out;
      opacity: 0;
      max-width: #{cc(240, 469)};
    }

    h2 {
      opacity: 0;
      animation: 2s fadeIn 1.5s forwards;
    }

    .c-header__content {
      position: absolute;
      left: 50%;
      width: 100%;
      top: 50%;
      transform: translate(-50%, -50%) translateY(var(--content-offset));
    }
  }

  @media (min-width: 43em) {
    margin-top: 0;
  }

  h2 {
    --link-idle: var(--black);
    --link-active: var(--black);

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 0 2rem;
    font-size: var(--step--1);

    @media (min-width: 43em) {
      flex-direction: row;
      font-size: var(--links-size, 0.9375rem);

      & > * + * {
        position: relative;
        
        &::before {
          color: var(--white);
          content: 'â€¢';
          font-size: 1.5em;
          position: absolute;
          right: 100%;
          top: 50%;
          transform: translateX(-.6rem) translateY(-55%);
          line-height: 1;
        }
      }
    }
  }

  &__hands {
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    z-index: -1;
    pointer-events: none;

    > * {
      transform-origin: var(--hand-transform-origin);
      position: absolute;
      aspect-ratio: var(--hand-aspect-ratio);
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y)) translateX(var(--hand-offset-x)) rotate(var(--hand-rotate));
      height: var(--hand-height);
      animation: var(--hand-animation-speed) handEnter var(--hand-animation-speed-delay) forwards ease-in-out;

      @media (prefers-reduced-motion: reduce) {
        animation: none;
      }      
    }
    
    & > :first-child {
      --hand-transform-origin: 0 0;
      --hand-aspect-ratio: 1875 / 633;
      --hand-height: #{cc(304, 543)};

      --hand-rotate-enter: -50deg;
      --hand-offset-x-enter: #{cc(-1362, -1710)};
      --hand-offset-y-enter: #{cc(-120, -90)};

      --hand-rotate: 0deg;
      --hand-offset-x: #{cc(-342, -710)};
      --hand-offset-y: #{cc(-195, -190)};

      --hand-animation-speed: 1s;
      --hand-animation-speed-delay: 0s;
    }

    & > :last-child {
      --hand-transform-origin: 0 100%;
      --hand-aspect-ratio: 1936 / 1115;
      --hand-height: #{cc(535, 956)};

      --hand-rotate-enter: 50deg;
      --hand-offset-x-enter: #{cc(1400, 1760)};
      --hand-offset-y-enter: #{cc(110, 130)};

      --hand-rotate: 0deg;
      --hand-offset-x: #{cc(370, 760)};
      --hand-offset-y: #{cc(120, 390)};

      --hand-animation-speed: 1s;
      --hand-animation-speed-delay: 0s;
    }
  }
}

@keyframes handEnter {
  from {
    transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y-enter)) translateX(var(--hand-offset-x-enter)) rotate(var(--hand-rotate-enter));
  }
  to {
    transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y)) translateX(var(--hand-offset-x)) rotate(var(--hand-rotate));
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.c-header-cta {
  margin-top: #{cc(-128, -80)};
  color: var(--white);
  text-align: center;
  animation: 1.5s fadeIn 1.5s forwards ease-in-out;
  opacity: 0;
  
  p:first-of-type {
    font-weight: var(--font-weight-lede);
    margin-top: 1.25rem;
  }

  &__intro {
    font-size: var(--type-24-30);
    max-width: 50rem;
    margin: var(--space-72-140) auto;
  }
}
