@use 'node_modules/utopia-core-scss/src/utopia' as utopia;

$settings: (
  "minWidth": 375,
  "maxWidth": 1000,
  "usePx": true,
  "relativeTo": "viewport-width",
);

@function cc($min, $max) {
  @return utopia.calculateClamp(map-merge($settings, (
    "minSize": $min,
    "maxSize": $max,
  )));
}

.c-hands {
  --min-height: #{cc(520, 640)};

  padding-block: 7.5rem 2.5rem;
  min-height: var(--min-height);
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-bottom: #{cc(100, 40)};
  z-index: 10;

  &__wrapper {
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    z-index: -1;
    pointer-events: none;

    > * {
      transform-origin: var(--hand-transform-origin);
      position: absolute;
      aspect-ratio: var(--hand-aspect-ratio);
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y)) translateX(var(--hand-offset-x)) rotate(var(--hand-rotate));
      height: var(--hand-height);
      animation: var(--hand-animation-speed) handEnter var(--hand-animation-speed-delay) forwards ease-in-out;

      @media (prefers-reduced-motion: reduce) {
        animation: none;
      }      
    }
    
    & > :first-child {
      --hand-transform-origin: 0 0;
      --hand-aspect-ratio: 1875 / 633;
      --hand-height: #{cc(304, 543)};

      --hand-rotate-enter: -50deg;
      --hand-offset-x-enter: #{cc(-1362, -1710)};
      --hand-offset-y-enter: #{cc(-220, -90)};

      --hand-rotate: 0deg;
      --hand-offset-x: #{cc(-382, -810)};
      --hand-offset-y: #{cc(-210, -230)};

      --hand-animation-speed: 1s;
      --hand-animation-speed-delay: 0s;
    }

    & > :last-child {
      --hand-transform-origin: 0 100%;
      --hand-aspect-ratio: 1936 / 1115;
      --hand-height: #{cc(535, 956)};

      --hand-rotate-enter: 50deg;
      --hand-offset-x-enter: #{cc(1400, 1760)};
      --hand-offset-y-enter: #{cc(280, 130)};

      --hand-rotate: 0deg;
      --hand-offset-x: #{cc(370, 860)};
      --hand-offset-y: #{cc(280, 330)};

      --hand-animation-speed: 1s;
      --hand-animation-speed-delay: 0s;
    }
  }
}

@keyframes handEnter {
  from {
    transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y-enter)) translateX(var(--hand-offset-x-enter)) rotate(var(--hand-rotate-enter));
  }
  to {
    transform: translateX(-50%) translateY(-50%) translateY(var(--hand-offset-y)) translateX(var(--hand-offset-x)) rotate(var(--hand-rotate));
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.c-hands-cta {
  color: var(--white);
  text-align: center;
  margin: #{cc(-128, -80)} auto 0;
  animation: 1.5s fadeIn 1.5s forwards ease-in-out;
  opacity: 0;

  &__intro {
    font-size: var(--type-28-46);
    max-width: 50rem;
    margin: 0 auto 31px;
    color: var(--black);
    line-height: 1.25;
    padding-inline: 32px;

    > * + * {
      margin-top: 6px;
    }

    > :last-child {
      font-weight: var(--font-weight-extra);
      color: var(--white);
    }
  }

  .c-button {
    &.is-floating {
      position: fixed;
      bottom: 1.5rem;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  [data-floating] {
    height: 60px;
  }
}
